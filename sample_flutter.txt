import 'package:flutter/material.dart';
import 'package:percent_indicator/percent_indicator.dart';

void main() => runApp(ChatbotApp());

class ChatbotApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: ChatbotScreen(),
    );
  }
}

class ChatbotScreen extends StatefulWidget {
  @override
  _ChatbotScreenState createState() => _ChatbotScreenState();
}

class _ChatbotScreenState extends State<ChatbotScreen> {
  final List<Map<String, String>> _messages = [];
  final TextEditingController _controller = TextEditingController();

  void _addMessage(String role, String content) {
    setState(() {
      _messages.add({'role': role, 'content': content});
    });
  }

  void _sendMessage(String userMessage) {
    if (userMessage.trim().isEmpty) return;

    _addMessage("user", userMessage);
    _controller.clear();

    // Simulate chatbot response
    Future.delayed(Duration(milliseconds: 500), () {
      String botResponse = _generateChatbotResponse(userMessage);
      double accuracy = _calculateAccuracy(userMessage);
      _addMessage("bot", "$botResponse\nAccuracy: ${(accuracy * 100).toStringAsFixed(1)}%");
    });
  }

  String _generateChatbotResponse(String input) {
    final Map<String, Map<String, dynamic>> predefinedAnswers = {
      "Did humans really land on the moon?": {
        "description": "Real – 100% accurate.",
        "accuracy": 1.0,
      },
      "Is the Earth flat or round?": {
        "description": "Fake – 100% accurate (Earth is round).",
        "accuracy": 1.0,
      },
      "Did the Illuminati create the internet?": {
        "description": "Fake – 100% accurate (the internet was developed by scientists, not the Illuminati).",
        "accuracy": 1.0,
      },
      "Is the Bermuda Triangle a portal to another dimension?": {
        "description": "Fake – 100% accurate (no scientific evidence supports the portal theory).",
        "accuracy": 1.0,
      },
      "Is Area 51 a place where aliens are kept?": {
        "description": "Fake – 99% accurate (no proof of aliens, but Area 51 is a real military base).",
        "accuracy": 0.99,
      },
      "Did the Titanic sink because of a cursed mummy?": {
        "description": "Fake – 100% accurate (the Titanic sank due to an iceberg collision, not a curse).",
        "accuracy": 1.0,
      },
      "Was COVID-19 created in a laboratory as a bioweapon?": {
        "description": "Fake – 99% accurate (no evidence COVID-19 was deliberately created as a bioweapon).",
        "accuracy": 0.99,
      },
      "Did Neil Armstrong and Buzz Aldrin land on the moon in 1969?": {
        "description": "Real – 100% accurate.",
        "accuracy": 1.0,
      },
      "When did Christopher Columbus land in the Americas?": {
        "description": "Real – 100% accurate (October 12, 1492).",
        "accuracy": 1.0,
      },
      "Did dinosaurs exist 1,000 years ago?": {
        "description": "Fake – 100% accurate (dinosaurs went extinct millions of years ago).",
        "accuracy": 1.0,
      },
    };

    if (predefinedAnswers.containsKey(input)) {
      final answer = predefinedAnswers[input]!;
      return answer['description']!;
    } else {
      return "I'm not sure. It could be real or fake.";
    }
  }

  double _calculateAccuracy(String input) {
    final Map<String, double> predefinedAccuracy = {
      "Did humans really land on the moon?": 1.0,
      "Is the Earth flat or round?": 1.0,
      "Did the Illuminati create the internet?": 1.0,
      "Is the Bermuda Triangle a portal to another dimension?": 1.0,
      "Is Area 51 a place where aliens are kept?": 0.99,
      "Did the Titanic sink because of a cursed mummy?": 1.0,
      "Was COVID-19 created in a laboratory as a bioweapon?": 0.99,
      "Did Neil Armstrong and Buzz Aldrin land on the moon in 1969?": 1.0,
      "When did Christopher Columbus land in the Americas?": 1.0,
      "Did dinosaurs exist 1,000 years ago?": 1.0,
    };

    return predefinedAccuracy[input] ?? 0.5; // Default to 50% if not predefined
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("FALO"),
      ),
      body: Column(
        children: [
          Expanded(
            child: ListView.builder(
              padding: EdgeInsets.all(10.0),
              itemCount: _messages.length,
              itemBuilder: (context, index) {
                final message = _messages[index];
                final isUser = message['role'] == 'user';
                final isBotWithAccuracy = message['content']!.contains("Accuracy");

                return Column(
                  crossAxisAlignment: isUser ? CrossAxisAlignment.end : CrossAxisAlignment.start,
                  children: [
                    Container(
                      margin: EdgeInsets.symmetric(vertical: 5),
                      padding: EdgeInsets.all(10),
                      decoration: BoxDecoration(
                        color: isUser ? Colors.blue[100] : Colors.green[100],
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: Text(
                        message['content']!,
                        style: TextStyle(fontSize: 16),
                      ),
                    ),
                    if (!isUser && isBotWithAccuracy) ...[
                      SizedBox(height: 5),
                      LinearPercentIndicator(
                        width: MediaQuery.of(context).size.width - 100,
                        lineHeight: 20.0,
                        percent: _extractAccuracy(message['content']!),
                        center: Text("${(_extractAccuracy(message['content']!) * 100).toStringAsFixed(1)}%"),
                        progressColor: Colors.blue,
                        backgroundColor: Colors.grey[300],
                        barRadius: Radius.circular(10),
                      ),
                    ]
                  ],
                );
              },
            ),
          ),
          Divider(height: 1),
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: Row(
              children: [
                Expanded(
                  child: TextField(
                    controller: _controller,
                    decoration: InputDecoration(
                      hintText: "Type your question...",
                      border: OutlineInputBorder(),
                    ),
                  ),
                ),
                SizedBox(width: 8),
                ElevatedButton(
                  onPressed: () => _sendMessage(_controller.text),
                  child: Text("Send"),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  double _extractAccuracy(String content) {
    final accuracyMatch = RegExp(r"Accuracy: (\d+(\.\d+)?)%").firstMatch(content);
    if (accuracyMatch != null) {
      return double.parse(accuracyMatch.group(1)!) / 100.0;
    }
    return 0.0;
  }
}
